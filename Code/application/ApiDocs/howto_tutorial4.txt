/** \page howto_tutorial4 Using AOIs
Files:
 - \ref Tutorial/Tutorial4.h "Tutorial/Tutorial4.h"
 - \ref Tutorial/Tutorial4.cpp "Tutorial/Tutorial4.cpp"

This tutorial will build on \ref howto_tutorial4.
We'll add an option to constrain processing to an AOI.

\dontinclude Tutorial/Tutorial4.cpp
This tutorial includes Qt header files so don't forget to add the appropriate Qt property sheets if you are building this tutorial yourself.
The build files distributed with the %Opticks SDK already include the Qt property sheets.

\skip isBatch
\until }
We are adding a new input argument for an AoiElement.
The plug-in only provides this argument when running in batch mode. 

\skip AoiElement
\until }
This extracts the AOI argument if the plug-in is being executed in batch mode.

\skipline pAois
This code gets a list of all the AoiElements which are children of the RasterElement.
When a type string is required, TypeConverter will generate the correct string given a data type.
The guarantees a compile time check for a correct type.

\until } // end if
We are creating a Qt string list of all the available AOI names including a placeholder for no AOI selection.
A QInputDialog presents the user with an AOI choice.
We find the chosen AOI with some validation.

\skip startRow
\until }
\skip setRows
\until setColumns
If an AOI is chosen, we can be more efficient in accessing the cube data.
We only need to loop over the AOI's bounding box.
An AOI can be accessed as a bitmask.
The bitmask can either represent selected pixels or unselected pixels.
The BitMask::isOutsideSelected() method indicates if the bitmask is negated.
If so, we need to loop over the entire image.

\skip unsigned int col
\until nextRow
We only add the pixel to the statistics counters if it is masked by the AOI.
We can ignore BitMask::isOutsideSelected() since BitMask::getPixel() already considers this.

The remainder of the file is unchanged from the previous tutorial.

\example Tutorial/Tutorial4.h
Declaration file for \ref howto_tutorial4 "Tutorial 4".
\example Tutorial/Tutorial4.cpp
Implementation file for \ref howto_tutorial4 "Tutorial 4".
 */